difftime(max_orderdate, min_orderdate,units="weeks")
ddays(max_orderdate, min_orderdate)
duration(difftime(max_orderdate, min_orderdate)"days")
duration(difftime(max_orderdate, min_orderdate),"days")
?duration
duration(num=difftime(max_orderdate, min_orderdate),units="days")
difftime(max_orderdate, min_orderdate)
time_between_minmaxorders <- difftime(max_orderdate, min_orderdate)
time_between_minmaxorders <- difftime(max_orderdate, min_orderdate)
time_between <- difftime(max_orderdate, min_orderdate)
difftime(max_orderdate, min_orderdate)
sales <- read.delim("Week_2/Data/sales_pipe.txt"
,stringsAsFactors=FALSE
,sep = "|"
,fileEncoding="WINDOWS-1252"
)
colnames(sales)[1] <- c("Row.ID")
sales$Order.Date <- as.Date(sales$Order.Date,format="%M/%d/%Y")
sales$Ship.Date <- as.Date(sales$Ship.Date,format="%B %d %Y")
time_between <- difftime(max(sales$Order.Date), min(sales$Order.Date))
max_orderdate <- max(sales$Order.Date)
min_orderdate <- min(sales$Order.Date)
time_between <- max_orderdate - min_orderdate
time_length(difftime(max_orderdate, min_orderdate), "years")
years_betweenorders <- time_length(difftime(max_orderdate, min_orderdate), "years")
days_betweenorders <- time_length(difftime(max_orderdate, min_orderdate), "days")
weeks_betweenorders <- time_length(difftime(max_orderdate, min_orderdate), "weeks")
time_length(mean(sales$Ship.Date),"days")
time_length(mean(sales$Ship.Date),"days")
ddays(mean(sales$Ship.Date))
duration(mean(sales$Ship.Date),unit="days")
mean(sales$Ship.Date)
mean_shipdate <- mean(sales$Ship.Date)
ddays(mean_shipdate)
?as.duration
mean_shipdate <- as.numeric(mean(sales$Ship.Date),"days")
sales$Ship.Date - sales$Order.Date
ship_order_diff <- sales$Ship.Date - sales$Order.Date
?paste
sales$daystoship <- paste(ship_order_diff[5])
View(sales)
sales$daystoship <- paste(ship_order_diff[,5])
sales$daystoship <- paste(ship_order_diff[5,])
View(sales)
sales <- read.delim("Week_2/Data/sales_pipe.txt"
,stringsAsFactors=FALSE
,sep = "|"
,fileEncoding="WINDOWS-1252"
)
colnames(sales)[1] <- c("Row.ID")
sales$Order.Date <- as.Date(sales$Order.Date,format="%M/%d/%Y")
sales$Ship.Date <- as.Date(sales$Ship.Date,format="%B %d %Y")
max_orderdate <- max(sales$Order.Date)
min_orderdate <- min(sales$Order.Date)
years_betweenorders <- time_length(difftime(max_orderdate, min_orderdate), "years")
days_betweenorders <- time_length(difftime(max_orderdate, min_orderdate), "days")
weeks_betweenorders <- time_length(difftime(max_orderdate, min_orderdate), "weeks")
ship_order_diff <- sales$Ship.Date - sales$Order.Date
sales$daystoship <- paste(ship_order_diff[,5])
View(sales)
sales$daystoship[5] <- paste(ship_order_diff)
sales$daystoship <- paste(ship_order_diff[,5])
sales$daystoship <- paste(ship_order_diff[,5])
sales$daystoship <- paste(ship_order_diff[ ,5])
sales$daystoship <- paste(ship_order_diff[5])
View(sales)
?stringr
?paste
sales <- read.delim("Week_2/Data/sales_pipe.txt"
,stringsAsFactors=FALSE
,sep = "|"
,fileEncoding="WINDOWS-1252"
)
colnames(sales)[1] <- c("Row.ID")
sales$Order.Date <- as.Date(sales$Order.Date,format="%M/%d/%Y")
sales$Ship.Date <- as.Date(sales$Ship.Date,format="%B %d %Y")
max_orderdate <- max(sales$Order.Date)
min_orderdate <- min(sales$Order.Date)
years_betweenorders <- time_length(difftime(max_orderdate, min_orderdate), "years")
days_betweenorders <- time_length(difftime(max_orderdate, min_orderdate), "days")
weeks_betweenorders <- time_length(difftime(max_orderdate, min_orderdate), "weeks")
ship_order_diff <- sales$Ship.Date - sales$Order.Date
mean_shipdays <- mean(ship_order_diff)
mean_shipdays <- time_length(mean(ship_order_diff),"days")
?length
length("Bill")
lenth(sales$Customer.Name)
length(sales$Customer.Name)
subset(sales$Customer.Name,"Bill")
str_count(sales$Customer.Name,"Bill")
sum(str_count(sales$Customer.Name,"Bill"))
sum(str_count(sales$Product.Name,"table"))
str_length(Bill)
str_length("Bill")
str_split_fixed(sales$Customer.Name," ",n=2)
split_custname <- str_split_fixed(sales$Customer.Name," ",n=2)
View(sales)
str_length(split_custname[1,]="Bill")
str_length(split_custname[1,])
str_length("Bill")
str_length("Bill")=split_custname[,1]
if(str_length("Bill")=str(split_custname[,1]))
if(str_length("Bill")=str_length(split_custname[,1]))
if(str_length("Bill"))
return(str_count(split_custname,"Bill"))
if(length(split_custnam)=4)
if(length(split_custnam)=4)
if(length(split_custnam[,1])=4)
length(split_custname[,1])
str_length(split_custname[,1])
length <- str_length(split_custname[,1])
firstname_length <- str_length(split_custname[,1])
if(firstname_length=4)
{
if(firstname_length=4)
if(firstname_length = 4)
if(firstname_length = "4")
if(firstname_length == 4)
return(str_count(split_custname[,1],"Bill"))
if(firstname_length > 3)
return(str_count(split_custname[,1],"Bill"))
if(firstname_length > 3)
return(str_count(split_custname[,1],"Bill")
else(0))
?ifelse
ifelse(firstname_length > 3, str_count(split_custname[,1],0))
ifelse(firstname_length > 3, str_count(split_custname[,1],"Bill"),0)
sum(ifelse(firstname_length > 3, str_count(split_custname[,1],"Bill"),0))
sum(ifelse(firstname_length == 4, str_count(split_custname[,1],"Bill"),0))
library(purrr)
nums_vector <- c(5,7,12,34,6,10,8,9)
target <- 13
two_sum <- function(nums_vector,target){
loop_vector <- numeric()
loop_work <- 0
#nested for statements using
#seq_along to iterate over the num_vector.
for(i in seq_along(nums_vector)) {
for(j in seq_along(nums_vector)) {
#if the sum of position [i] and position [j] equal the target
#and aren't the same number,
#concatenate and output the indices on a line
#Separate each pair of indices by a new line
loop_work <- loop_work + 1
loop_vector <- if(i < j && nums_vector[i] + nums_vector[j] == target) {
c(paste(loop_vector,cat(i, j, "\n")))
}
}
}
}
#run the function
two_sum(nums_vector, target)
print(loop_work)
loop_vector <- numeric()
loop_work <- 0
print(loop_work)
two_sum <- function(nums_vector,target){
loop_vector <- numeric()
loop_work <- 0
#nested for statements using
#seq_along to iterate over the num_vector.
for(i in seq_along(nums_vector)) {
for(j in seq_along(nums_vector)) {
#if the sum of position [i] and position [j] equal the target
#and aren't the same number,
#concatenate and output the indices on a line
#Separate each pair of indices by a new line
loop_work <- loop_work + 1
loop_vector <- if(i < j && nums_vector[i] + nums_vector[j] == target) {
c(paste(loop_vector,cat(i, j, "\n")))
}
}
}
}
#run the function
two_sum(nums_vector, target)
print(loop_work)
library(purrr)
nums_vector <- c(5,7,12,34,6,10,8,9)
target <- 13
loop_vector <- numeric()
loop_work <- 0
two_sum <- function(nums_vector,target){
#nested for statements using
#seq_along to iterate over the num_vector.
for(i in seq_along(nums_vector)) {
for(j in seq_along(nums_vector)) {
#if the sum of position [i] and position [j] equal the target
#and aren't the same number,
#concatenate and output the indices on a line
#Separate each pair of indices by a new line
loop_work <- loop_work + 1
loop_vector <- if(i < j && nums_vector[i] + nums_vector[j] == target) {
c(paste(loop_vector,cat(i, j, "\n")))
}
}
}
}
#run the function
two_sum(nums_vector, target)
print(loop_work)
#if the sum of position [i] and position [j] equal the target
#and aren't the same number,
#concatenate and output the indices on a line
#Separate each pair of indices by a new line
loop_work <- loop_work + 1
r.project.data <- read.csv("~/School/DSE5002/Week_5/Project/r project data.csv")
View(r.project.data)
#Examine summary statistics
summary(r.project.data)
head(r.project.data)
head(r.project.data)
#Rename column 1 to row_id
colnames(r.project.data)[1] <- c("row_id")
head(r.project.data)
View(r.project.data)
#begin data aggregation and initial analysis
library(dplyr)
is.na(r.project.data)
is.na.data.frame(r.project.data)
print("Position of missing values ")
which(is.na(r.project.data))
print("Count of total missing values")
sum(is.na(r.project.data))
year_experience_group <- r.project.data %>%
group_by(year, experience_level) %>%
summarise(salary_in_usd)
year_experience_group <- r.project.data %>%
group_by(work_year, experience_level) %>%
summarise(salary_in_usd)
View(year_experience_group)
year_experience_group <- r.project.data %>%
group_by(work_year, experience_level) %>%
summarise(sum(salary_in_usd))
View(year_experience_group)
year_title_group <- r.project.data %>%
group_by(work_year, job_title) %>%
summarise(sum(salary_in_usd))
View(year_title_group)
year_title_group <- r.project.data %>%
group_by(job_title) %>%
summarise(sum(salary_in_usd))
View(year_title_group)
year_title_group <- r.project.data %>%
group_by(job_title) %>%
summarise(mean(salary_in_usd))
View(year_title_group)
year_experience_group <- r.project.data %>%
group_by(work_year, experience_level) %>%
summarise(mean(salary_in_usd))
View(year_experience_group)
?order_by
year_experience_group <- r.project.data %>%
group_by(work_year, experience_level) %>%
summarise(mean(salary_in_usd)) %>%
order_by(experience_level)
year_experience_group <- r.project.data %>%
group_by(work_year, experience_level) %>%
summarise(mean(salary_in_usd)) %>%
arrange(experience_level)
View(year_experience_group)
year_title_group <- r.project.data %>%
group_by(job_title) %>%
summarise(mean(salary_in_usd)) %>%
arrange(desc(salary_in_usd))
year_title_group <- r.project.data %>%
group_by(job_title) %>%
summarise(salary_in_usd=mean(salary_in_usd)) %>%
arrange(desc(salary_in_usd))
View(year_title_group)
currency_exchange_rate <- r.project.data %>%
group_by(company_location, salary_currency) %>%
mutate(exchange_rate=salary_in_usd/salary)
View(currency_exchange_rate)
currency_exchange_rate <- r.project.data %>%
group_by(company_location, salary_currency) %>%
mutate(exchange_rate=sum(salary_in_usd/salary))
View(currency_exchange_rate)
currency_exchange_rate <- r.project.data %>%
group_by(company_location, salary_currency, salary_in_usd, salary) %>%
mutate(exchange_rate=sum(salary_in_usd/salary))
currency_exchange_rate <- r.project.data %>%
group_by(company_location, salary_currency, salary_in_usd, salary) %>%
summarize(exchange_rate=sum(salary_in_usd/salary))
View(currency_exchange_rate)
currency_exchange_rate <- r.project.data %>%
group_by(company_location, salary_currency, salary_in_usd, salary) %>%
summarize(exchange_rate_to_usd=sum(salary_in_usd/salary))
View(currency_exchange_rate)
currency_exchange_rate <- r.project.data %>%
group_by(company_location, salary_currency, salary_in_usd, salary) %>%
summarize(multiplier_to_usd=sum(salary_in_usd/salary))
View(currency_exchange_rate)
year_experience_group <- r.project.data %>%
group_by(work_year, experience_level) %>%
summarise(average_salary_usd=mean(salary_in_usd),
median_salary_usd=median(salary_in_usd)) %>%
arrange(experience_level)
View(year_experience_group)
View(currency_exchange_rate)
currency_exchange_rate <- r.project.data %>%
group_by(company_location, salary_currency, salary_in_usd, salary) %>%
summarise(multiplier_to_usd=mean(salary_in_usd/salary))
View(currency_exchange_rate)
currency_exchange_rate <- r.project.data %>%
group_by(salary_currency, salary_in_usd, salary) %>%
summarise(multiplier_to_usd=mean(salary_in_usd/salary))
View(currency_exchange_rate)
currency_exchange_rate <- r.project.data %>%
group_by(salary_currency) %>%
summarise(multiplier_to_usd=mean(salary_in_usd/salary))
View(currency_exchange_rate)
currency_exchange_rate <- r.project.data %>%
group_by(salary_currency) %>%
summarise(multiplier_to_usd=salary_in_usd/salary)
currency_exchange_rate <- r.project.data %>%
group_by(salary_currency) %>%
summarise(multiplier_to_usd=mean(salary_in_usd/salary))
View(currency_exchange_rate)
currency_exchange_rate <- r.project.data %>%
group_by(salary_currency) %>%
summarise(multiplier_to_usd=sum(salary_in_usd/salary))
View(currency_exchange_rate)
currency_exchange_rate <- r.project.data %>%
group_by(salary_currency) %>%
summarise(multiplier_to_usd=mean(salary_in_usd/salary))
View(currency_exchange_rate)
salary_companysize_group <- r.project.data %>%
group_by(company_size) %>%
summarise(salary_in_usd)
salary_companysize_group <- r.project.data %>%
group_by(company_size) %>%
summarise(mean(salary_in_usd))
View(salary_companysize_group)
salary_companysize_group <- r.project.data %>%
group_by(company_size, remote_ratio) %>%
summarise(mean(salary_in_usd))
View(salary_companysize_group)
mean_median_salary <- function(salary_in_usd) {
print(mean(salary_in_usd)) &&
print(median(salary_in_usd))
}
salary_companysize_group <- r.project.data %>%
group_by(company_size, remote_ratio) %>%
summarise(mean_median_salary())
salary_companysize_group <- r.project.data %>%
group_by(company_size, remote_ratio) %>%
summarise(mean_median_salary(salary_in_usd))
View(salary_companysize_group)
mean_median_salary <- function() {
salary_vector <- integer()
salary_vector <- c(salary_vector, paste((mean(r.project.data$salary_in_usd) &&
median(salaryr.project.data$salary_in_usd))))
return(salary_vector)
}
salary_companysize_group <- r.project.data %>%
group_by(company_size, remote_ratio) %>%
summarise(mean_median_salary(salary_in_usd))
salary_companysize_group <- r.project.data %>%
group_by(company_size, remote_ratio) %>%
summarise(mean_median_salary())
mean_median_salary <- function() {
salary_vector <- integer()
salary_vector <- c(salary_vector, paste((mean(r.project.data$salary_in_usd) &&
median(salary.project.data$salary_in_usd))))
return(salary_vector)
}
salary_companysize_group <- r.project.data %>%
group_by(company_size, remote_ratio) %>%
summarise(mean_median_salary())
mean_median_salary <- function() {
salary_vector <- integer()
salary_vector <- c(salary_vector, paste((mean(r.project.data[,8]) &&
median(salary.project.data[,8]))))
return(salary_vector)
}
salary_companysize_group <- r.project.data %>%
group_by(company_size, remote_ratio) %>%
summarise(mean_median_salary())
mean_median_salary <- function() {
salary_vector <- integer()
salary_vector <- c(salary_vector, paste((mean(r.project.data[,8]) &&
median(r.project.data[,8]))))
return(salary_vector)
}
salary_companysize_group <- r.project.data %>%
group_by(company_size, remote_ratio) %>%
summarise(mean_median_salary())
View(salary_companysize_group)
salary_companysize_group <- r.project.data %>%
group_by(company_size, remote_ratio) %>%
summarise(mean_median_salary(salary_in_usd))
mean_median_salary <- function(r.project.data$salary_in_usd) {
mean_median_salary <- function(r.project.data[,8]) {
mean_median_salary <- function(r.project.data) {
salary_vector <- integer()
salary_vector <- c(salary_vector, paste((mean(r.project.data[,8]) &&
median(r.project.data[,8]))))
return(salary_vector)
}
salary_companysize_group <- r.project.data %>%
group_by(company_size, remote_ratio) %>%
summarise(mean_median_salary())
salary_companysize_group <- r.project.data %>%
group_by(company_size, remote_ratio) %>%
summarise(mean_median_salary(salary_in_usd))
salary_companysize_group <- r.project.data %>%
group_by(company_size, remote_ratio) %>%
summarise(mean(salary_in_usd))
View(salary_companysize_group)
salary_companysize_group <- r.project.data %>%
group_by(year, company_size, remote_ratio) %>%
summarise(mean(salary_in_usd))
salary_companysize_group <- r.project.data %>%
group_by(work_year, company_size, remote_ratio) %>%
summarise(mean(salary_in_usd))
View(salary_companysize_group)
salary_company_remote_group <- r.project.data %>%
group_by(work_year, company_size, remote_ratio) %>%
summarise(mean(salary_in_usd))
View(salary_company_remote_group)
#Begin visualizations
library(ggplot2)
ggplot(year_experience_group) +
geom_line(aes(x=work_year, y=average_salary_usd))
ggplot(year_experience_group) +
geom_bar(aes(x=work_year, y=average_salary_usd))
ggplot(year_experience_group) +
geom_histogram(aes(x=work_year, y=average_salary_usd))
ggplot(year_experience_group) +
geom_density(aes(x=work_year, y=average_salary_usd))
ggplot(year_experience_group, aes(x=work_year, y=average_salary_usd)) +
geom_density()
ggplot(year_experience_group, aes(x=work_year, y=average_salary_usd,
color=experience_level)) +
geom_density()
ggplot(year_experience_group, aes(x=work_year, y=average_salary_usd,
color=experience_level)) +
geom_bar()
ggplot(year_experience_group, aes(y=average_salary_usd,
color=experience_level)) +
geom_bar()
ggplot(year_experience_group, aes(y=average_salary_usd, y=mean_salary_usd,
color=experience_level)) +
geom_col()
ggplot(year_experience_group, aes(x=work_year, y=mean_salary_usd,
color=experience_level)) +
geom_col()
ggplot(year_experience_group, aes(x=work_year, y=average_salary_usd,
color=experience_level)) +
geom_col()
ggplot(year_experience_group, aes(x=work_year, y=average_salary_usd,
fill=experience_level)) +
geom_col()
?geom_col
ggplot(year_experience_group, aes(x=work_year, y=average_salary_usd,
fill=experience_level)) +
geom_bar()
ggplot(year_experience_group, aes(x=work_year, y=average_salary_usd,
fill=experience_level)) +
geom_col(orientation="x")
ggplot(year_experience_group, aes(x=work_year, y=average_salary_usd,
fill=experience_level)) +
geom_col(orientation="y")
ggplot(year_experience_group, aes(x=work_year, y=average_salary_usd,
fill=experience_level)) +
geom_col(orientation="x")
ggplot(year_experience_group, aes(x=work_year, y=average_salary_usd,
fill=experience_level)) +
geom_histogram()
ggplot(year_experience_group, aes(x=work_year, y=average_salary_usd,
fill=experience_level)) +
geom_col()
ggplot(year_experience_group, aes(x=work_year, y=average_salary_usd,
)) +
geom_col()+
facet_grid(~ . experience_level)
ggplot(year_experience_group, aes(x=work_year, y=average_salary_usd,
)) +
geom_col()+
facet_grid(~ .experience_level)
ggplot(year_experience_group, aes(x=work_year, y=average_salary_usd,
fill=experience_level)) +
geom_col()+
facet_grid(~ .experience_level)
ggplot(year_experience_group, aes(x=work_year, y=average_salary_usd,
)) +
geom_col()+
facet_grid(. ~ experience_level)
ggplot(year_experience_group, aes(x=work_year, y=average_salary_usd,
fill=experience_level)) +
geom_col()+
facet_grid(. ~ experience_level)
ggplot(year_experience_group, aes(x=work_year, y=average_salary_usd,
fill=experience_level)) +
geom_col()
geom_col
?geom_col
?geom_col
ggplot(year_experience_group, aes(x=work_year, y=average_salary_usd,
fill=experience_level)) +
geom_col(position=position_dodge())
ggplot(year_experience_group, aes(x=work_year, y=average_salary_usd,
color=experience_level)) +
geom_boxplot()
ggplot(year_experience_group, aes(y=average_salary_usd,
color=experience_level)) +
geom_boxplot()
ggplot(year_experience_group, aes(y=average_salary_usd,
color=experience_level)) +
geom_boxplot() +
facet_grid(. ~ experience_level)
